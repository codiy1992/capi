---
#---------------------------------------------------#
## 配置参考:
## https://github.com/Dreamacro/clash/wiki/configuration
## https://github.com/Hackl0us/SS-Rule-Snippet/wiki/clash(X)
#
# https://www.youtube.com/watch?v=qItL005LUik
# https://www.youtube.com/watch?v=aKlH6KRt9Jc
# https://www.youtube.com/watch?v=50iVDmqzDW8
#
# 代理模式:
# 1. 系统代理模式(Clash接管系统代理http/socks5)
# 2. 透明代理模式(TUN, 创建一个虚拟网卡, 所有流量都要经过这个网卡)
# 所以开启 TUN 模式能保证那些不默认使用系统代理的软件的流量也经过Clash
#
# 系统代理被Clash接管后, 客户端/浏览器在发起请求的时候并不会先DNS解析域名, 而是直接将请求转发给Clash
# Clash 拿到请求后, 根据 rules 的分流规则, 来决定是否继续下一步的转发
# 如果目标域名没命中前面的基于 DOMAIN 的匹配规则, 则当碰到 rules 中与目标IP相关的匹配规则(IP-CIDR|GEOIP)时,
# Clash 必须先将请求域名解析为IP, 才能进行规则匹配,
# 浏览器的UDP流量不会交给系统代理(会造成UDP泄露/WebRTC泄露), 可以禁用WebRTC或者使用透明代理
#
# 对于系统代理模式(即clash接管了本机的系统代理), 当没有开启Clash的DNS模块时, 会使用系统本机的DNS进行解析
# 开启了DNS模块, 当需要使用基于目标IP的匹配规则时或者匹配到DIRECT时, 会使用内置DNS查询
#
# 对于透明代理模式(放在路由器上,或者放在本机但开启了TUN模式),
# 这时, 如果未开启DNS模块,则还是会使用本机DNS进行域名解析
# 如果开启了DNS模块,并使用 redir-host 模式, 域名的DNS请求被并行发给,default-nameserver 和 nameserver 提供的 DNS 服务器
# 这种情况, 仍然存在DNS泄露的可能, 只是给你提供了自定义DNS的入口(据说redir-host已经被移除,只剩fake-ip模式了)
# 如果开启了DNS模块,并使用 fake-ip 模式, 只要域名不在 fake-ip-filter 列表, 都会返回一个假IP(这样基本会匹配不上这个基于目标IP的规则)
# 如果 rules 最后两条是
#  - GEOIP,CN,DIRECT
#  - MATCH,Proxy
# 那这个请求就会变成走代理了,因为返回的 fake-ip 不会被 CN 的IP匹配上.
#
#
# 总之 clash 在将流量转发给代理服务器节点时, 会原封不动的转发(带着请求域名), 而这之前Clash可能有进行DNS解析, 但只用来做rules的分流判断
# (所以即使DNS解析回来的IP被国内DNS污染了, 还是能正常使用代理, 但如果DNS请求发给了国内DNS则会存在DNS泄露, 国内DNS服务器知道你想访问xxx)
#
# 检测 DNS 泄露的网站 ipleak.net
# 打开 ipleak.net 时, 将发起一系列唯一的各级DNS缓存里都没有的域名请求如(https://ht08qx7unr9sn81gb8engfokyy2130wxa5irrry5-17.ipleak.net/dnsdetection/)
# 因为各级DNS都没有相应缓存, 所以最终DNS查询请求会被转给ipleak的权威DNS服务器,
# ipleak的权威DNS服务器在响应正确IP的同时把转发该DNS请求的源服务器IP记录了下来(上一级的DNS服务器IP)
# 因为 ipleak.net 将 *.ipleak.net 解析到其应用服务器中, 所以应用服务器又把权威DNS服务器记录的IP通过HTTP响应了回来
#
# 检测 WebRTC 泄露 https://browserleaks.com/webrtc
#---------------------------------------------------

# Port of HTTP(S) proxy server on the local end
#port: 7890

# Port of SOCKS5 proxy server on the local end
#socks-port: 7891

# Transparent proxy server port for Linux and macOS (Redirect TCP and TProxy UDP)
# redir-port: 7892

# Transparent proxy server port for Linux (TProxy TCP and TProxy UDP)
# tproxy-port: 7893

# HTTP(S) and SOCKS4(A)/SOCKS5 server on the same port
mixed-port: 7890

# authentication of local SOCKS5/HTTP(S) server
# authentication:
#  - "user1:pass1"
#  - "user2:pass2"

# Set to true to allow connections to the local-end server from
# other LAN IP addresses
allow-lan: true

# This is only applicable when `allow-lan` is `true`
# '*': bind all IP addresses
# 192.168.122.11: bind a single IPv4 address
# "[aaaa::a8aa:ff:fe09:57d8]": bind a single IPv6 address
bind-address: "*"

# Clash router working mode
# rule: rule-based packet routing
# global: all packets will be forwarded to a single endpoint
# direct: directly forward the packets to the Internet
mode: rule

# Clash by default prints logs to STDOUT
# info / warning / error / debug / silent
log-level: info

# When set to false, resolver won't translate hostnames to IPv6 addresses
ipv6: false

# RESTful web API listening address
external-controller: 0.0.0.0:9090

# A relative path to the configuration directory or an absolute path to a
# directory in which you put some static web resource. Clash core will then
# serve it at `http://{{external-controller}}/ui`.
# external-ui: folder

# Secret for the RESTful API (optional)
# Authenticate by spedifying HTTP header `Authorization: Bearer ${secret}`
# ALWAYS set a secret if RESTful API is listening on 0.0.0.0
# secret: ""

# Outbound interface name
# interface-name: en0

# Static hosts for DNS server and connection establishment (like /etc/hosts)
#
# Wildcard hostnames are supported (e.g. *.clash.dev, *.foo.*.example.com)
# Non-wildcard domain names have a higher priority than wildcard domain names
# e.g. foo.example.com > *.example.com > .example.com
# P.S. +.foo.com equals to .foo.com and foo.com
hosts:
  # '*.clash.dev': 127.0.0.1
  # '.dev': 127.0.0.1
  # 'alpha.clash.dev': '::1'

profile:
  # Store the `select` results in $HOME/.config/clash/.cache
  # set false If you don't want this behavior
  # when two different configurations have groups with the same name, the selected values are shared
  store-selected: false
